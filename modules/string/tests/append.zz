using string;
using <stdio.h>::{printf, stdin};
using <stdlib.h>::{free};
inline using "native.h"::{getline};


test append{
    stdin  = "hello\n world\n"
    stdout = "hello\n world\n"
}

test overflow{
    stdin  = "lorum ipsdulbla bla something something hello hello"
    stdout = "lorum ipsdulbla bla something something hello hel"
}

export fn main() -> int {
    string::String+50 mut s = {0};
    string::clear(&s);

    for (;;) {
        char mut * mut line = 0;
        usize mut l = 0;
        int nread = as<int>(getline(&line, &l, stdin));
        if nread < 1 {
            free(line);
            break;
        }
        static_attest(safe(line));
        static_attest(nullterm(line));
        string::append_cstr(&s, line);
        free(line);
    }

    printf("%.*s", s.len, s.mem);
    return 0;
}
